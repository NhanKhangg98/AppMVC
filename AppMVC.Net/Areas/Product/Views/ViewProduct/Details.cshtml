@model ProductModel
@using AppMVC.Net.Components

@{
    List<CategoryProduct> categories = ViewBag.categories as List<CategoryProduct>;
    CategoryProduct category = ViewBag.category as CategoryProduct;

    IQueryable<ProductModel> otherProducts = ViewBag.otherProducts as IQueryable<ProductModel>;
}

<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="#">Home</a></li>
    
        @if(category != null)
        {
            var li = category.ListParents();
            foreach (var l in li)
            {
                <li class="breadcrumb-item">
                    <a asp-action="Index" asp-route-categoryslug="@l.Slug">@l.Title</a>
                </li>
            }
            <li class="breadcrumb-item">
                    <a asp-action="Index" asp-route-categoryslug="@category.Slug">@category.Title</a>
                </li>
        }

  </ol>
</nav>


<div class="detailpost">
    <h1>@Model.Title</h1>
    <div class="sapo">
        @Model.Description
    </div>
    <div>
        <i>Cập nhật: @Model.DateUpdated</i> /
        Tác giả: <strong>@Model.Author.UserName</strong>
    </div>
    <hr />

    @Html.Raw(Model.Content)


</div>




@section Sidebar{
    @await Component.InvokeAsync("AppMVC.Net.Components.CategoryProductSidebar", 
        new CategoryProductSidebar.CategorySidebarData(){
            Categories = categories,
            level = 0,
            categoryslug = category.Slug
        })

    <ul class="list-group">
    @foreach (var product in otherProducts)
   {
       <li class="list-group-item">
           <a asp-controller="ViewProduct" asp-action="Details" asp-route-productslug="@product.Slug">
               @product.Title
           </a>
       </li>
   }
</ul>
}
